{"version":3,"file":"/Users/wolfgangkling/Dropbox/Recaudo_Bogota/2017/Angular/angular2-baseapp/tools/tasks/seed/build.js.dev.ts","sources":["/Users/wolfgangkling/Dropbox/Recaudo_Bogota/2017/Angular/angular2-baseapp/tools/tasks/seed/build.js.dev.ts"],"names":[],"mappings":";AAAA,IAAY,IAAI,WAAM,MAAM,CAAC,CAAA;AAC7B,IAAY,eAAe,WAAM,mBAAmB,CAAC,CAAA;AACrD,IAAY,KAAK,WAAM,cAAc,CAAC,CAAA;AACtC,IAAY,IAAI,WAAM,WAAW,CAAC,CAAA;AAClC,qBAAwC,MAAM,CAAC,CAAA;AAE/C,uBAAmB,cAAc,CAAC,CAAA;AAClC,sBAA8C,aAAa,CAAC,CAAA;AAE5D,IAAM,OAAO,GAAQ,eAAe,EAAE,CAAC;AAEvC,IAAM,gBAAgB,GAAG,IAAI,CAAC,SAAS,CAAC,gBAAM,CAAC,iBAAiB,CAAC,CAAC;AAElE,IAAI,iBAAiB,GAAG,gBAAM,CAAC,sBAAsB,CAAC;AAMtD,iBAAS;IACP,IAAI,SAAc,CAAC;IACnB,IAAI,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC;QACrB,gBAAM,CAAC,SAAS,GAAG,2BAA2B;KAC/C,CAAC,CAAC;IACH,IAAI,GAAG,GAAG;QACR,WAAI,CAAC,gBAAM,CAAC,OAAO,EAAE,SAAS,CAAC;QAC/B,GAAG,GAAG,WAAI,CAAC,gBAAM,CAAC,OAAO,EAAE,cAAc,CAAC;QAC1C,GAAG,GAAG,WAAI,CAAC,gBAAM,CAAC,OAAO,EAAE,kBAAkB,CAAC;QAC9C,GAAG,GAAG,WAAI,CAAC,gBAAM,CAAC,OAAO,EAAE,QAAM,gBAAM,CAAC,6BAA6B,QAAK,CAAC;KAC5E,CAAC;IAEF,IAAI,YAAY,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;IACjC,IAAI,MAAW,CAAC;IAChB,IAAI,aAAa,GAAG,IAAI,CAAC;IAGzB,EAAE,CAAC,CAAC,iBAAiB,GAAG,gBAAM,CAAC,sBAAsB,CAAC,CAAC,CAAC;QACtD,aAAa,GAAG,KAAK,CAAC;QACtB,SAAS,GAAG,qBAAa,CAAC,EAAC,eAAe,EAAE,IAAI,EAAC,CAAC,CAAC;QACnD,YAAY,GAAG,YAAY,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC,CAAC;QACnD,IAAI,CAAC,GAAG,CAAC,yCAAyC,CAAC,CAAC;IACtD,CAAC;IAAC,IAAI,CAAC,CAAC;QACN,SAAS,GAAG,qBAAa,EAAE,CAAC;QAC5B,YAAY,GAAG,KAAK,CAAC,OAAO,EAAE,YAAY,CAAC,CAAC;IAC9C,CAAC;IAED,MAAM,GAAG,YAAY;SAClB,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC;SACvB,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC;SAC/B,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC;SACnC,EAAE,CAAC,OAAO,EAAE;QACX,iBAAiB,GAAG,gBAAM,CAAC,sBAAsB,CAAC;IACpD,CAAC,CAAC,CAAC;IAEL,EAAE,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC;QAClB,iBAAiB,GAAG,CAAC,CAAC;IACxB,CAAC;IAAC,IAAI,CAAC,CAAC;QACN,iBAAiB,EAAE,CAAC;IACtB,CAAC;IAED,MAAM,CAAC,MAAM,CAAC,EAAE;SACb,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,KAAK,EAAE,CAAC;SAQhC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,MAAM,CAClC,sBAAc,EAAE,EAAE;QAChB,iBAAiB,EAAE,gBAAgB;KACpC,CACD,CAAC,CAAC;SACH,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,gBAAM,CAAC,QAAQ,CAAC,CAAC,CAAC;AACtC,CAAC,CAAC","sourcesContent":["import * as gulp from 'gulp';\nimport * as gulpLoadPlugins from 'gulp-load-plugins';\nimport * as merge from 'merge-stream';\nimport * as util from 'gulp-util';\nimport { join/*, sep, relative*/ } from 'path';\n\nimport Config from '../../config';\nimport { makeTsProject, templateLocals } from '../../utils';\n\nconst plugins = <any>gulpLoadPlugins();\n\nconst jsonSystemConfig = JSON.stringify(Config.SYSTEM_CONFIG_DEV);\n\nlet typedBuildCounter = Config.TYPED_COMPILE_INTERVAL; // Always start with the typed build.\n\n/**\n * Executes the build process, transpiling the TypeScript files (except the spec and e2e-spec files) for the development\n * environment.\n */\nexport = () => {\n  let tsProject: any;\n  let typings = gulp.src([\n    Config.TOOLS_DIR + '/manual_typings/**/*.d.ts'\n  ]);\n  let src = [\n    join(Config.APP_SRC, '**/*.ts'),\n    '!' + join(Config.APP_SRC, '**/*.spec.ts'),\n    '!' + join(Config.APP_SRC, '**/*.e2e-spec.ts'),\n    '!' + join(Config.APP_SRC, `**/${Config.BOOTSTRAP_FACTORY_PROD_MODULE}.ts`)\n  ];\n\n  let projectFiles = gulp.src(src);\n  let result: any;\n  let isFullCompile = true;\n\n  // Only do a typed build every X builds, otherwise do a typeless build to speed things up\n  if (typedBuildCounter < Config.TYPED_COMPILE_INTERVAL) {\n    isFullCompile = false;\n    tsProject = makeTsProject({isolatedModules: true});\n    projectFiles = projectFiles.pipe(plugins.cached());\n    util.log('Performing typeless TypeScript compile.');\n  } else {\n    tsProject = makeTsProject();\n    projectFiles = merge(typings, projectFiles);\n  }\n\n  result = projectFiles\n    .pipe(plugins.plumber())\n    .pipe(plugins.sourcemaps.init())\n    .pipe(plugins.typescript(tsProject))\n    .on('error', () => {\n      typedBuildCounter = Config.TYPED_COMPILE_INTERVAL;\n    });\n\n  if (isFullCompile) {\n    typedBuildCounter = 0;\n  } else {\n    typedBuildCounter++;\n  }\n\n  return result.js\n    .pipe(plugins.sourcemaps.write())\n// Use for debugging with Webstorm/IntelliJ\n// https://github.com/mgechev/angular2-seed/issues/1220\n//    .pipe(plugins.sourcemaps.write('.', {\n//      includeContent: false,\n//      sourceRoot: (file: any) =>\n//        relative(file.path, PROJECT_ROOT + '/' + APP_SRC).replace(sep, '/') + '/' + APP_SRC\n//    }))\n    .pipe(plugins.template(Object.assign(\n      templateLocals(), {\n        SYSTEM_CONFIG_DEV: jsonSystemConfig\n      }\n     )))\n    .pipe(gulp.dest(Config.APP_DEST));\n};\n"]}